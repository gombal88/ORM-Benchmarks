package pl.gombal.orm_benchmarks.io.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import pl.gombal.orm_benchmarks.io.greendao.SingleTable;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable10;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable09;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable08;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable07;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable06;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable05;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable04;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable03;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable02;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable01;
import pl.gombal.orm_benchmarks.io.greendao.BigSingleTable;
import pl.gombal.orm_benchmarks.io.greendao.TableWithRelationToMany;
import pl.gombal.orm_benchmarks.io.greendao.TableWithRelationToOne;

import pl.gombal.orm_benchmarks.io.greendao.SingleTableDao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable10Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable09Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable08Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable07Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable06Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable05Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable04Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable03Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable02Dao;
import pl.gombal.orm_benchmarks.io.greendao.MultiTable01Dao;
import pl.gombal.orm_benchmarks.io.greendao.BigSingleTableDao;
import pl.gombal.orm_benchmarks.io.greendao.TableWithRelationToManyDao;
import pl.gombal.orm_benchmarks.io.greendao.TableWithRelationToOneDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig singleTableDaoConfig;
    private final DaoConfig multiTable10DaoConfig;
    private final DaoConfig multiTable09DaoConfig;
    private final DaoConfig multiTable08DaoConfig;
    private final DaoConfig multiTable07DaoConfig;
    private final DaoConfig multiTable06DaoConfig;
    private final DaoConfig multiTable05DaoConfig;
    private final DaoConfig multiTable04DaoConfig;
    private final DaoConfig multiTable03DaoConfig;
    private final DaoConfig multiTable02DaoConfig;
    private final DaoConfig multiTable01DaoConfig;
    private final DaoConfig bigSingleTableDaoConfig;
    private final DaoConfig tableWithRelationToManyDaoConfig;
    private final DaoConfig tableWithRelationToOneDaoConfig;

    private final SingleTableDao singleTableDao;
    private final MultiTable10Dao multiTable10Dao;
    private final MultiTable09Dao multiTable09Dao;
    private final MultiTable08Dao multiTable08Dao;
    private final MultiTable07Dao multiTable07Dao;
    private final MultiTable06Dao multiTable06Dao;
    private final MultiTable05Dao multiTable05Dao;
    private final MultiTable04Dao multiTable04Dao;
    private final MultiTable03Dao multiTable03Dao;
    private final MultiTable02Dao multiTable02Dao;
    private final MultiTable01Dao multiTable01Dao;
    private final BigSingleTableDao bigSingleTableDao;
    private final TableWithRelationToManyDao tableWithRelationToManyDao;
    private final TableWithRelationToOneDao tableWithRelationToOneDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        singleTableDaoConfig = daoConfigMap.get(SingleTableDao.class).clone();
        singleTableDaoConfig.initIdentityScope(type);

        multiTable10DaoConfig = daoConfigMap.get(MultiTable10Dao.class).clone();
        multiTable10DaoConfig.initIdentityScope(type);

        multiTable09DaoConfig = daoConfigMap.get(MultiTable09Dao.class).clone();
        multiTable09DaoConfig.initIdentityScope(type);

        multiTable08DaoConfig = daoConfigMap.get(MultiTable08Dao.class).clone();
        multiTable08DaoConfig.initIdentityScope(type);

        multiTable07DaoConfig = daoConfigMap.get(MultiTable07Dao.class).clone();
        multiTable07DaoConfig.initIdentityScope(type);

        multiTable06DaoConfig = daoConfigMap.get(MultiTable06Dao.class).clone();
        multiTable06DaoConfig.initIdentityScope(type);

        multiTable05DaoConfig = daoConfigMap.get(MultiTable05Dao.class).clone();
        multiTable05DaoConfig.initIdentityScope(type);

        multiTable04DaoConfig = daoConfigMap.get(MultiTable04Dao.class).clone();
        multiTable04DaoConfig.initIdentityScope(type);

        multiTable03DaoConfig = daoConfigMap.get(MultiTable03Dao.class).clone();
        multiTable03DaoConfig.initIdentityScope(type);

        multiTable02DaoConfig = daoConfigMap.get(MultiTable02Dao.class).clone();
        multiTable02DaoConfig.initIdentityScope(type);

        multiTable01DaoConfig = daoConfigMap.get(MultiTable01Dao.class).clone();
        multiTable01DaoConfig.initIdentityScope(type);

        bigSingleTableDaoConfig = daoConfigMap.get(BigSingleTableDao.class).clone();
        bigSingleTableDaoConfig.initIdentityScope(type);

        tableWithRelationToManyDaoConfig = daoConfigMap.get(TableWithRelationToManyDao.class).clone();
        tableWithRelationToManyDaoConfig.initIdentityScope(type);

        tableWithRelationToOneDaoConfig = daoConfigMap.get(TableWithRelationToOneDao.class).clone();
        tableWithRelationToOneDaoConfig.initIdentityScope(type);

        singleTableDao = new SingleTableDao(singleTableDaoConfig, this);
        multiTable10Dao = new MultiTable10Dao(multiTable10DaoConfig, this);
        multiTable09Dao = new MultiTable09Dao(multiTable09DaoConfig, this);
        multiTable08Dao = new MultiTable08Dao(multiTable08DaoConfig, this);
        multiTable07Dao = new MultiTable07Dao(multiTable07DaoConfig, this);
        multiTable06Dao = new MultiTable06Dao(multiTable06DaoConfig, this);
        multiTable05Dao = new MultiTable05Dao(multiTable05DaoConfig, this);
        multiTable04Dao = new MultiTable04Dao(multiTable04DaoConfig, this);
        multiTable03Dao = new MultiTable03Dao(multiTable03DaoConfig, this);
        multiTable02Dao = new MultiTable02Dao(multiTable02DaoConfig, this);
        multiTable01Dao = new MultiTable01Dao(multiTable01DaoConfig, this);
        bigSingleTableDao = new BigSingleTableDao(bigSingleTableDaoConfig, this);
        tableWithRelationToManyDao = new TableWithRelationToManyDao(tableWithRelationToManyDaoConfig, this);
        tableWithRelationToOneDao = new TableWithRelationToOneDao(tableWithRelationToOneDaoConfig, this);

        registerDao(SingleTable.class, singleTableDao);
        registerDao(MultiTable10.class, multiTable10Dao);
        registerDao(MultiTable09.class, multiTable09Dao);
        registerDao(MultiTable08.class, multiTable08Dao);
        registerDao(MultiTable07.class, multiTable07Dao);
        registerDao(MultiTable06.class, multiTable06Dao);
        registerDao(MultiTable05.class, multiTable05Dao);
        registerDao(MultiTable04.class, multiTable04Dao);
        registerDao(MultiTable03.class, multiTable03Dao);
        registerDao(MultiTable02.class, multiTable02Dao);
        registerDao(MultiTable01.class, multiTable01Dao);
        registerDao(BigSingleTable.class, bigSingleTableDao);
        registerDao(TableWithRelationToMany.class, tableWithRelationToManyDao);
        registerDao(TableWithRelationToOne.class, tableWithRelationToOneDao);
    }
    
    public void clear() {
        singleTableDaoConfig.getIdentityScope().clear();
        multiTable10DaoConfig.getIdentityScope().clear();
        multiTable09DaoConfig.getIdentityScope().clear();
        multiTable08DaoConfig.getIdentityScope().clear();
        multiTable07DaoConfig.getIdentityScope().clear();
        multiTable06DaoConfig.getIdentityScope().clear();
        multiTable05DaoConfig.getIdentityScope().clear();
        multiTable04DaoConfig.getIdentityScope().clear();
        multiTable03DaoConfig.getIdentityScope().clear();
        multiTable02DaoConfig.getIdentityScope().clear();
        multiTable01DaoConfig.getIdentityScope().clear();
        bigSingleTableDaoConfig.getIdentityScope().clear();
        tableWithRelationToManyDaoConfig.getIdentityScope().clear();
        tableWithRelationToOneDaoConfig.getIdentityScope().clear();
    }

    public SingleTableDao getSingleTableDao() {
        return singleTableDao;
    }

    public MultiTable10Dao getMultiTable10Dao() {
        return multiTable10Dao;
    }

    public MultiTable09Dao getMultiTable09Dao() {
        return multiTable09Dao;
    }

    public MultiTable08Dao getMultiTable08Dao() {
        return multiTable08Dao;
    }

    public MultiTable07Dao getMultiTable07Dao() {
        return multiTable07Dao;
    }

    public MultiTable06Dao getMultiTable06Dao() {
        return multiTable06Dao;
    }

    public MultiTable05Dao getMultiTable05Dao() {
        return multiTable05Dao;
    }

    public MultiTable04Dao getMultiTable04Dao() {
        return multiTable04Dao;
    }

    public MultiTable03Dao getMultiTable03Dao() {
        return multiTable03Dao;
    }

    public MultiTable02Dao getMultiTable02Dao() {
        return multiTable02Dao;
    }

    public MultiTable01Dao getMultiTable01Dao() {
        return multiTable01Dao;
    }

    public BigSingleTableDao getBigSingleTableDao() {
        return bigSingleTableDao;
    }

    public TableWithRelationToManyDao getTableWithRelationToManyDao() {
        return tableWithRelationToManyDao;
    }

    public TableWithRelationToOneDao getTableWithRelationToOneDao() {
        return tableWithRelationToOneDao;
    }

}
