package pl.gombal.orm_benchmarks.io.greendao.entity;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table TABLE_WITH_RELATION_TO_ONE.
 */
public class TableWithRelationToOne {

    private Long id;
    /** Not-null value. */
    private String SampleStringColl01;
    private String SampleStringColl02;
    private String SampleStringColl03;
    private String SampleStringColl04;
    private String SampleStringColl05;
    private String SampleStringColl06;
    private String SampleStringColl07;
    private String SampleStringColl08;
    private String SampleStringColl09;
    private String SampleStringColl10;
    private int SampleIntColl01;
    private Integer SampleIntColl02;
    private Double SampleRealColl01;
    private Double SampleRealColl02;
    private Integer SampleIntCollIndexed;
    private long TableWithRelationToOneId;
    private Long TableWithRelationToManyId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient TableWithRelationToOneDao myDao;

    private TableWithRelationToMany tableWithRelationToMany;
    private Long tableWithRelationToMany__resolvedKey;


    public TableWithRelationToOne() {
    }

    public TableWithRelationToOne(Long id) {
        this.id = id;
    }

    public TableWithRelationToOne(Long id, String SampleStringColl01, String SampleStringColl02, String SampleStringColl03, String SampleStringColl04, String SampleStringColl05, String SampleStringColl06, String SampleStringColl07, String SampleStringColl08, String SampleStringColl09, String SampleStringColl10, int SampleIntColl01, Integer SampleIntColl02, Double SampleRealColl01, Double SampleRealColl02, Integer SampleIntCollIndexed, long TableWithRelationToOneId, Long TableWithRelationToManyId) {
        this.id = id;
        this.SampleStringColl01 = SampleStringColl01;
        this.SampleStringColl02 = SampleStringColl02;
        this.SampleStringColl03 = SampleStringColl03;
        this.SampleStringColl04 = SampleStringColl04;
        this.SampleStringColl05 = SampleStringColl05;
        this.SampleStringColl06 = SampleStringColl06;
        this.SampleStringColl07 = SampleStringColl07;
        this.SampleStringColl08 = SampleStringColl08;
        this.SampleStringColl09 = SampleStringColl09;
        this.SampleStringColl10 = SampleStringColl10;
        this.SampleIntColl01 = SampleIntColl01;
        this.SampleIntColl02 = SampleIntColl02;
        this.SampleRealColl01 = SampleRealColl01;
        this.SampleRealColl02 = SampleRealColl02;
        this.SampleIntCollIndexed = SampleIntCollIndexed;
        this.TableWithRelationToOneId = TableWithRelationToOneId;
        this.TableWithRelationToManyId = TableWithRelationToManyId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getTableWithRelationToOneDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getSampleStringColl01() {
        return SampleStringColl01;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSampleStringColl01(String SampleStringColl01) {
        this.SampleStringColl01 = SampleStringColl01;
    }

    public String getSampleStringColl02() {
        return SampleStringColl02;
    }

    public void setSampleStringColl02(String SampleStringColl02) {
        this.SampleStringColl02 = SampleStringColl02;
    }

    public String getSampleStringColl03() {
        return SampleStringColl03;
    }

    public void setSampleStringColl03(String SampleStringColl03) {
        this.SampleStringColl03 = SampleStringColl03;
    }

    public String getSampleStringColl04() {
        return SampleStringColl04;
    }

    public void setSampleStringColl04(String SampleStringColl04) {
        this.SampleStringColl04 = SampleStringColl04;
    }

    public String getSampleStringColl05() {
        return SampleStringColl05;
    }

    public void setSampleStringColl05(String SampleStringColl05) {
        this.SampleStringColl05 = SampleStringColl05;
    }

    public String getSampleStringColl06() {
        return SampleStringColl06;
    }

    public void setSampleStringColl06(String SampleStringColl06) {
        this.SampleStringColl06 = SampleStringColl06;
    }

    public String getSampleStringColl07() {
        return SampleStringColl07;
    }

    public void setSampleStringColl07(String SampleStringColl07) {
        this.SampleStringColl07 = SampleStringColl07;
    }

    public String getSampleStringColl08() {
        return SampleStringColl08;
    }

    public void setSampleStringColl08(String SampleStringColl08) {
        this.SampleStringColl08 = SampleStringColl08;
    }

    public String getSampleStringColl09() {
        return SampleStringColl09;
    }

    public void setSampleStringColl09(String SampleStringColl09) {
        this.SampleStringColl09 = SampleStringColl09;
    }

    public String getSampleStringColl10() {
        return SampleStringColl10;
    }

    public void setSampleStringColl10(String SampleStringColl10) {
        this.SampleStringColl10 = SampleStringColl10;
    }

    public int getSampleIntColl01() {
        return SampleIntColl01;
    }

    public void setSampleIntColl01(int SampleIntColl01) {
        this.SampleIntColl01 = SampleIntColl01;
    }

    public Integer getSampleIntColl02() {
        return SampleIntColl02;
    }

    public void setSampleIntColl02(Integer SampleIntColl02) {
        this.SampleIntColl02 = SampleIntColl02;
    }

    public Double getSampleRealColl01() {
        return SampleRealColl01;
    }

    public void setSampleRealColl01(Double SampleRealColl01) {
        this.SampleRealColl01 = SampleRealColl01;
    }

    public Double getSampleRealColl02() {
        return SampleRealColl02;
    }

    public void setSampleRealColl02(Double SampleRealColl02) {
        this.SampleRealColl02 = SampleRealColl02;
    }

    public Integer getSampleIntCollIndexed() {
        return SampleIntCollIndexed;
    }

    public void setSampleIntCollIndexed(Integer SampleIntCollIndexed) {
        this.SampleIntCollIndexed = SampleIntCollIndexed;
    }

    public long getTableWithRelationToOneId() {
        return TableWithRelationToOneId;
    }

    public void setTableWithRelationToOneId(long TableWithRelationToOneId) {
        this.TableWithRelationToOneId = TableWithRelationToOneId;
    }

    public Long getTableWithRelationToManyId() {
        return TableWithRelationToManyId;
    }

    public void setTableWithRelationToManyId(Long TableWithRelationToManyId) {
        this.TableWithRelationToManyId = TableWithRelationToManyId;
    }

    /** To-one relationship, resolved on first access. */
    public TableWithRelationToMany getTableWithRelationToMany() {
        Long __key = this.TableWithRelationToManyId;
        if (tableWithRelationToMany__resolvedKey == null || !tableWithRelationToMany__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            TableWithRelationToManyDao targetDao = daoSession.getTableWithRelationToManyDao();
            TableWithRelationToMany tableWithRelationToManyNew = targetDao.load(__key);
            synchronized (this) {
                tableWithRelationToMany = tableWithRelationToManyNew;
            	tableWithRelationToMany__resolvedKey = __key;
            }
        }
        return tableWithRelationToMany;
    }

    public void setTableWithRelationToMany(TableWithRelationToMany tableWithRelationToMany) {
        synchronized (this) {
            this.tableWithRelationToMany = tableWithRelationToMany;
            TableWithRelationToManyId = tableWithRelationToMany == null ? null : tableWithRelationToMany.getId();
            tableWithRelationToMany__resolvedKey = TableWithRelationToManyId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
